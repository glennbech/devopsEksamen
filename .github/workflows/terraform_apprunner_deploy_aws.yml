name: Apprunner AWS Terraform

on:
  push:
    branches:
      - "*"

env:
  IMAGE_CONTAINER: ${{ vars.IMAGE_CONTAINER }}
  BUCKET_NAME: ${{ vars.BUCKET_NAME }}
jobs:

  build_docker_image:
    name: Push Docker image to ECR
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Build Docker Image
        run: |
          docker build . -t ppe2012  

      - name: Build and push Docker image
        if: ${{ github.ref == 'refs/heads/main' }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION:  ${{ vars.AWS_REGION }}

        run: |
          aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 244530008913.dkr.ecr.eu-west-1.amazonaws.com
          rev=$(git rev-parse --short HEAD)
          docker tag ppe2012 ${{ env.IMAGE_CONTAINER }}:$rev
          docker tag ppe2012 ${{ env.IMAGE_CONTAINER }}:latest
          docker push ${{ env.IMAGE_CONTAINER }}:$rev
          docker push ${{ env.IMAGE_CONTAINER }}:latest

  terraform:
    name: "Terraform"
    needs: build_docker_image

    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION:  ${{ vars.AWS_REGION }}
      PREFIX: ${{ vars.PREFIX }}
      EMAIL: ${{ secrets.EMAIL }}
      ALARM_LOGIN_THRESHOLD: 2
      METRIC_NAME: unauthorized_scan_attempts.count


    #    TF_LOG: trace
    steps:
      - uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2


      - name: Terraform Init
        id: init
        working-directory: ./infra
        run: terraform init

      - name: Terraform Plan
        id: plan
        working-directory: ./infra
        run: terraform plan -var="email=$EMAIL"  -var="BUCKET_NAME=$BUCKET_NAME" -var="threshold=$ALARM_LOGIN_THRESHOLD" -var="metric_name=$METRIC_NAME"  -var="prefix=$PREFIX" -var="image=${{ env.IMAGE_CONTAINER }}:latest"  -no-color
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        working-directory: ./infra
        run: exit 1

      - name: Terraform Apply
        working-directory: ./infra

        run: terraform apply -var="email=$EMAIL" -var="BUCKET_NAME=$BUCKET_NAME" -var="threshold=$ALARM_LOGIN_THRESHOLD" -var="metric_name=$METRIC_NAME"  -var="prefix=$PREFIX" -var="image=${{ env.IMAGE_CONTAINER }}:latest"  -auto-approve

  

